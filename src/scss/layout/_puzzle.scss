.puzzle {
  display: grid;
  grid-template-columns: 50vw;
  gap: 2rem;
  font-weight: 700;

  @include respond(phone) {
    grid-template-columns: 90vw;
  }

  @media screen and (max-height: 400px) {
    grid-template-columns: 30vw 30vw;
  }

  @for $i from 0 through 5 {
    &--out--#{$i} {
      animation: anim__answer--out
        #{$questionInOutDuration}ms
        #{$i *
        $questionInOutDelayOffset}ms
        ease-in-out
        forwards;
    }

    &--in--#{$i} {
      animation: anim__answer--in
        #{$questionInOutDuration}ms
        #{$i *
        $questionInOutDelayOffset}ms
        ease-in-out
        backwards;
    }
  }
}

.question {
  position: relative;
  grid-column: 1 / -1;
  font-size: $question-font;
  text-align: center;

  @include card(center);

  &__type {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 3rem;
    height: 3rem;
  }
}

.answer {
  @include card(center);

  display: flex;
  align-items: center;

  color: $color-total;
  font-size: $question-font / 2;
  transition: all 0.3s;

  @media (hover: hover) {
    &:hover {
      transform: scale(1.05);
    }
  }

  &__number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3.5rem;
    height: 3.5rem;
    margin-left: $question-font / 4;

    border: 2px solid currentColor;
    border-radius: 50%;
  }

  &__text {
    margin-left: auto;
  }

  > svg {
    width: 3rem;
  }
}

@keyframes anim__answer--in {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
}

@keyframes anim__answer--out {
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}
